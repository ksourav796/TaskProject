app.controller('paymentMethodController',
    function ($scope, $http, $location, $filter, Notification,$window) {
        $scope.bshimServerURL = "/hotel";
        $scope.inactiveStatus="Active";
        $scope.firstPage=true;
        $scope.lastPage=false;
        $scope.pageNo=1;
        $scope.prevPage=false;
        $scope.isPrev=false;
        $scope.isNext=false;


        $scope.reloadPage = function () {
            $window.location.reload();
        };

        $scope.taxTypes = [
            {name: 'FullTax', value: 'FullTax'},
            {name: 'SimplifiedTax', value: 'SimplifiedTax'},
        ];
        $scope.notHide = "";
        $scope.updateCustomerId = function (newCustVal) {
            $scope.customer = newCustVal.customerId;
            $scope.removeAllItems();
        }
        $scope.removePaymentMethodDetails = function () {
            $scope.paymentmethodId = "0";
            $scope.PaymentMethodText="0";
            $scope.DescriptionText="0";
            $scope.TypeText="0";
            $scope.account_name="";
            $scope.defaultType=false;
            $scope.validateVoucher=false;
        };
        $scope.companyLogoPath = "";

        $scope.addNewPaymentMethodPopulate = function () {
            $scope.paymentmethodId = "";
            $scope.paymentmethodNameText = "";
            $scope.paymentmethodDescriptionText = "";
            $scope.paymentmethodTypeText = "";
            $scope.account = "";
            $scope.defaultType=false;
            $scope.validateVoucher=false;
            $scope.account_name="";
            $scope.paymentMethodText="Active";
            $('#payment-title').text("Add Payment Method");
            $("#add_new_PaymentMethod_modal").modal('show');

        };

        $scope.clicked = false;
        $scope.ButtonStatus = "InActive";
        $scope.inactivePaymentMethod = function() {

            if($scope.clicked == false){
                $scope.inactiveStatus = "InActive";
                $scope.ButtonStatus = "Active";
                var page="Page";
            }
            else{
                $scope.inactiveStatus = "Active";
                $scope.ButtonStatus = "InActive";
                var page="";
            }
            $scope.clicked = !$scope.clicked;
            $http.post( $scope.bshimServerURL + "/getPaymentMethodList?statustext="+  $scope.inactiveStatus).then(function (response) {
                var data = response.data;
                $scope.listStatus=false;
                $scope.paymentMethodList = data;
            })
        };
        $scope.getPaymentMethodList = function (type,searchText) {
            if (angular.isUndefined(type,searchText)) {
                type = "Active";
                $scope.searchText="";
            }
            $http.post( $scope.bshimServerURL + '/getPaymentMethodList?type='+type).then(function (response) {
                var data = response.data;
                console.log(data);
                $scope.paymentMethodList = data;
                $("#selectItem").modal('show');
            }, function (error) {
                Notification.error({
                    message: 'Something went wrong, please try again',
                    positionX: 'center',
                    delay: 2000
                });
            })
        };
        $scope.getPaymentMethodList();
        $scope.getPaymentMethodList = function (statustext) {

            if (angular.isUndefined(statustext)) {
                statustext = "";
            }
            $http.post( $scope.bshimServerURL + '/getPaymentMethodList?statustext='+statustext,{
                params: {
                    "firstPage": $scope.firstPage,
                    "lastPage": $scope.lastPage,
                    "pageNo": $scope.pageNo,
                    "prevPage": $scope.prevPage,
                    "prevPage": $scope.isPrev,
                    "nextPage": $scope.isNext
                }
            }).then(function (response) {
                var data = response.data;
                $scope.paymentMethodList = data;
                /**/
                var i=0;
                $scope.listStatus=true;
                if(i>0){
                    Notification.error({
                        message: 'Payment Method is InActive',
                        positionX: 'center',
                        delay: 2000
                    });
                }
                $scope.first = data.first;
                $scope.last = data.last;
                $scope.prev = data.prev;
                $scope.next = data.next;
                $scope.pageNo = data.pageNo;

                // if($scope.paymentMethodList=='' && $scope.paymentMethodSearchText!='' ){
                //     Notification.error({message: 'No Results Found', positionX: 'center', delay: 2000});
                // }
            },function (error) {
                Notification.error({message: 'Something went wrong, please try again', positionX: 'center', delay: 2000});
            })
        };
        //added method for pagination on 22/08/2017 @rahul
        $scope.getPaginatedPaymentMethodList = function(page) {

            switch (page) {
                case 'firstPage':
                    $scope.firstPage = true;
                    $scope.lastPage = false;
                    $scope.pageNo = 0;
                    break;
                case 'lastPage':
                    $scope.lastPage = true;
                    $scope.firstPage = false;
                    $scope.pageNo = 0;
                    break;
                case 'nextPage':
                    $scope.isNext = true;
                    $scope.isPrev = false;
                    $scope.lastPage = false;
                    $scope.firstPage = false;
                    $scope.pageNo = $scope.pageNo + 1;
                    break;
                case 'prevPage':
                    $scope.isPrev = true;
                    $scope.lastPage = false;
                    $scope.firstPage = false;
                    $scope.isNext = false;
                    $scope.pageNo = $scope.pageNo - 1;
                    break;
                default:
                    $scope.firstPage = true;
                    $scope.lastPage = false;
                    $scope.pageNo = 0;
                    $scope.isNext = false;
                    $scope.isPrev = false;
            }

            statustext="Active";
            $http.post( $scope.bshimServerURL + '/getPaymentMethodList?statustext='+statustext,{
                params: {
                    "firstPage": $scope.firstPage,
                    "lastPage": $scope.lastPage,
                    "pageNo": $scope.pageNo,
                    "prevPage": $scope.prevPage,
                    "prevPage": $scope.isPrev,
                    "nextPage": $scope.isNext
                }
            }).then(function(data) {
                $scope.paymentMethodList = data;
                $scope.first = data.data.first;
                $scope.last = data.data.last;
                $scope.listStatus=false;
                $scope.prev = data.data.prev;
                $scope.next = data.data.next;
                $scope.pageNo = data.data.pageNo;
            });

        }

        $scope.saveOrUpdatePayment= function () {
            if (angular.isUndefined($scope.paymentmethodNameText) || $scope.paymentmethodNameText == ''||$scope.paymentmethodNameText==null ) {
                Notification.error({message: 'Please Enter Payment Name ', positionX: 'center', delay: 2000});
            }
            else if (angular.isUndefined($scope.paymentmethodTypeText) || $scope.paymentmethodTypeText == ''||$scope.paymentmethodTypeText==null ) {
                Notification.error({message: 'Please Select Payment Method Type ', positionX: 'center', delay: 2000});
            }

            else {
                var savePaymentMethodDetails;
                savePaymentMethodDetails = {
                    paymentmethodId: $scope.paymentmethodId,
                    paymentmethodName: $scope.paymentmethodNameText,
                    paymentmethodDescription: $scope.paymentmethodDescriptionText,
                    paymentmethodType: $scope.paymentmethodTypeText,
                    accountMaster: $scope.account,
                    validateVoucher:$scope.validateVoucher,
                    defaultType:$scope.defaultType,
                    status:$scope.paymentMethodText
                };
                $http.post( $scope.bshimServerURL + '/savePaymentMethod', angular.toJson(savePaymentMethodDetails, "Create")).then(function (response, status, headers, config) {
                    var data = response.data;
                    if(data==""){
                        Notification.success({message: 'Already exists', positionX: 'center', delay: 2000});
                    }
                    else {
                        $scope.removePaymentMethodDetails();
                        $scope.getPaymentMethodList();
                        $("#add_new_PaymentMethod_modal").modal('hide');
                        if (!angular.isUndefined(data) && data !== null) {
                            $scope.paymentMethodSearchText = "";
                        }
                        Notification.success({
                            message: 'Payment Method Created  successfully',
                            positionX: 'center',
                            delay: 2000
                        });
                    }
                },function (error) {
                    Notification.error({
                        message: 'Something went wrong, please try again',
                        positionX: 'center',
                        delay: 2000
                    });
                });

            };
        };

        $scope.backconfiguration=function(){
            $window.location.href='/home#!/configuration'
        };

        $scope.importPopup = function(){
            $("#import_PaymentMethod").modal('show');
        }

        $scope.savePaymentmethodImport = function(){
            $scope.isDisabled= true;
            var formElement = document.getElementById("paymentmethodDetails");
            var paymentmethodDetails = new FormData(formElement);
            $http.post($scope.bshimServerURL + '/paymentmethodImportSave',paymentmethodDetails,
                { headers: {'Content-Type': undefined},
                    transformRequest: angular.identity,
                }).then(function (response) {
                    $("#import_PaymentMethod").modal('hide');
                $scope.getPaymentMethodList();
                    $scope.getPaginatedPaymentMethodList();
                    $scope.isDisabled= false;
                }, function (error) {
                    Notification.error({
                        message: 'Something went wrong, please try again',
                        positionX: 'center',
                        delay: 2000
                    });
                    $scope.isDisabled= false;
                }
            )
        }



        $scope.editPayment = function(data) {
            $scope.setupobj = data;
            $scope.paymentmethodId = data.paymentmethodId;
            $scope.paymentmethodNameText = data.paymentmethodName;
            $scope.paymentmethodDescriptionText=data.paymentmethodDescription;
            $scope.paymentmethodTypeText=data.paymentmethodType;
            $scope.paymentMethodText=data.status;
            // var boolValue = data.defaultType.toLowerCase() == 'true' ? true : false;   //returns true
            // $scope.defaultType=boolValue;
            if(data.accountMaster!=null) {
                $scope.account_name = data.accountMaster.account_name;
                $scope.account=data.accountMaster;
            }
            else {
                $scope.account_name="";
            }
            if(data.defaultType!=null)
                if(data.defaultType.toString().toLowerCase()=='true'){
                    $scope.defaultType=true;
                }
                else {
                    $scope.defaultType=false;
                }
            if(data.validateVoucher=='true'){
                $scope.validateVoucher=true;
            }
            else {
                $scope.validateVoucher=false;
            }
            $("#submit").text("Update");
            $('#payment-title').text("Edit Payment Method");
            $("#add_new_PaymentMethod_modal").modal('show');
        },function (error) {
            Notification.error({message: 'Something went wrong, please try again',positionX: 'center',delay: 2000});

        };
        // $scope.deletePayment = function (data) {
        //     bootbox.confirm({
        //         title: "Alert",
        //         message: "Do you want to Continue ?",
        //         buttons: {
        //             confirm: {
        //                 label: 'OK'
        //             },
        //             cancel: {
        //                 label: 'Cancel'
        //             }
        //         },
        //         callback: function (result) {
        //             //  alert("delete");
        //             if(result == true){
        //                 $scope.paymentmethodId = data.paymentmethodId;
        //                 $scope.paymentmethodNameText=data.paymentmethodName;
        //                 $scope.paymentmethodDescriptionText=data.paymentmethodDescription;
        //                 $scope.CashAccountIDText=data.accountMaster;
        //                 $scope.paymentMethodText=data.status;
        //                 var deleteDetails = {
        //                     paymentmethodId : $scope.paymentmethodId,
        //                     paymentmethodName: $scope.paymentmethodNameText,
        //                     paymentmethodDescription : $scope.paymentmethodDescriptionText,
        //                     accountMaster: $scope.account
        //                 };
        //                 $http.post( $scope.bshimServerURL + '/deletePaymentMethod', angular.toJson(deleteDetails, "Create")).then(function (response) {
        //                     var data = response.data;
        //                     if(data=="") {
        //                         Notification.success({
        //                             message: 'It Is Already In Use Cant be Deleted',
        //                             positionX: 'center',
        //                             delay: 2000
        //                         });
        //                     }else {
        //                         $scope.getPaymentMethodList();
        //                         if($scope.paymentMethodText=="InActive") {
        //                             $scope.getPaymentMethodList("","InActive");
        //                             Notification.success({
        //                                 message: 'Status has been changed to Active',
        //                                 positionX: 'center',
        //                                 delay: 2000
        //                             });
        //                         }
        //                         else{
        //                             $scope.getPaymentMethodList("","");
        //                             Notification.success({
        //                                 message: 'Status has been changed to InActive',
        //                                 positionX: 'center',
        //                                 delay: 2000
        //                             });
        //                         }
        //                     }
        //                 }, function (error) {
        //                     Notification.error({
        //                         message: 'Something went wrong, please try again',
        //                         positionX: 'center',
        //                         delay: 2000
        //                     });
        //                 });
        //             }
        //
        //         }
        //     });
        // };

        $scope.getPaginatedPaymentMethodList = function (page) {
            switch (page) {
                case 'firstPage':
                    $scope.firstPage = true;
                    $scope.lastPage = false;
                    $scope.pageNo = 0;
                    $scope.isNext = false;
                    $scope.isPrev = false;
                    break;
                case 'lastPage':
                    $scope.lastPage = true;
                    $scope.firstPage = false;
                    $scope.pageNo = 0;
                    $scope.isNext = false;
                    $scope.isPrev = false;
                    break;
                case 'nextPage':
                    $scope.isNext = true;
                    $scope.isPrev = false;
                    $scope.lastPage = false;
                    $scope.firstPage = false;
                    $scope.pageNo = $scope.pageNo + 1;
                    break;
                case 'prevPage':
                    $scope.isPrev = true;
                    $scope.lastPage = false;
                    $scope.firstPage = false;
                    $scope.isNext = false;
                    $scope.pageNo = $scope.pageNo - 1;
                    break;
                default:
                    $scope.firstPage = true;
            }
            var paginationDetails;
            paginationDetails={
                firstPage: $scope.firstPage,
                lastPage: $scope.lastPage,
                pageNo: $scope.pageNo,
                prevPage: $scope.isPrev,
                nextPage: $scope.isNext
            }
            if(angular.isUndefined($scope.searchText)){
                $scope.searchText="";
            }
            $http.post($scope.bshimServerURL + '/getPaginatedPaymentMethodList?searchText='+$scope.searchText,angular.toJson(paginationDetails)).then(function (response) {
                var data = response.data;
                console.log(data);
                $scope.cityList = data.list;
                $scope.first = data.firstPage;
                $scope.last = data.lastPage;
                $scope.prev = data.prevPage;
                $scope.next = data.nextPage;
                $scope.pageNo = data.pageNo;
            }, function (error) {
                Notification.error({
                    message: 'Something went wrong, please try again',
                    positionX: 'center',
                    delay: 2000
                });
            })
        };

        $scope.getPaginatedPaymentMethodList();

        $scope.deletePayment=function(data){
            bootbox.confirm({
                title: "Alert",
                message: "Do you want to Continue ?",
                buttons: {
                    confirm: {
                        label: 'OK'
                    },
                    cancel: {
                        label: 'Cancel'
                    }
                },
                callback: function (result) {
                    if (result == true) {
                        $http.post($scope.bshimServerURL + '/deletePaymentMethod?paymentmethodId=' + data.paymentmethodId).then(function (response) {
                            var data = response.data;
                            Notification.success({
                                message: 'Payment Method deleted  successfully',
                                positionX: 'center',
                                delay: 2000
                            });
                            $scope.getPaymentMethodList();
                            // $scope.getPaginatedPaymentMethodList();
                        }, function (error) {
                            Notification.error({
                                message: 'Something went wrong, please try again',
                                positionX: 'center',
                                delay: 2000
                            });
                            $scope.isDisabled = false;
                        });
                    }
                }
            });
        };

    });
