app.controller('employeesController',
    function ($scope, $rootScope, $http, $location, $filter,$window, Notification) {
        $scope.bshimServerURL = "/hotel";
        $scope.word = /^[a-z]+[a-z0-9._]+@[a-z]+\.[a-z.]{2,5}$/;
        $scope.customerId = 1;
        $scope.userRights = [];
        $scope.operation = 'Create';
        $scope.customer = 1;

        $scope.reloadPage = function () {
            $window.location.reload();
        };

        $scope.dateOptions = {
            maxDate : new Date()
        };
        $scope.format = 'dd/MM/yyyy';
        $scope.openDate = function () {
            $scope.popup8.opened = true;
        };

        $scope.popup8 = {
            opened: false
        };

        $scope.openDate1 = function () {
            $scope.popup1.opened = true;
        };

        $scope.popup1 = {
            opened: false
        };

        $scope.getPaginatedEmployeesList = function (page) {
            switch (page) {
                case 'firstPage':
                    $scope.firstPage = true;
                    $scope.lastPage = false;
                    $scope.pageNo = 0;
                    $scope.isNext = false;
                    $scope.isPrev = false;
                    break;
                case 'lastPage':
                    $scope.lastPage = true;
                    $scope.firstPage = false;
                    $scope.pageNo = 0;
                    $scope.isNext = false;
                    $scope.isPrev = false;
                    break;
                case 'nextPage':
                    $scope.isNext = true;
                    $scope.isPrev = false;
                    $scope.lastPage = false;
                    $scope.firstPage = false;
                    $scope.pageNo = $scope.pageNo + 1;
                    break;
                case 'prevPage':
                    $scope.isPrev = true;
                    $scope.lastPage = false;
                    $scope.firstPage = false;
                    $scope.isNext = false;
                    $scope.pageNo = $scope.pageNo - 1;
                    break;
                default:
                    $scope.firstPage = true;
                    $scope.lastPage = false;
                    $scope.pageNo = 0;
                    $scope.isNext = false;
                    $scope.isPrev = false;
            }
            var paginationDetails;
            paginationDetails={
                firstPage: $scope.firstPage,
                lastPage: $scope.lastPage,
                pageNo: $scope.pageNo,
                prevPage: $scope.isPrev,
                nextPage: $scope.isNext
            }
            if(angular.isUndefined($scope.searchText)){
                $scope.searchText="";
            }
            $http.post($scope.bshimServerURL + '/getPaginatedEmployeesList?searchText='+$scope.searchText,angular.toJson(paginationDetails)).then(function (response) {
                var data = response.data;
                console.log(data);
                $scope.cityList = data.list;
                $scope.first = data.firstPage;
                $scope.last = data.lastPage;
                $scope.prev = data.prevPage;
                $scope.next = data.nextPage;
                $scope.pageNo = data.pageNo;
            }, function (error) {
                Notification.error({
                    message: 'Something went wrong, please try again',
                    positionX: 'center',
                    delay: 2000
                });
            })
        };

        $scope.getPaginatedEmployeesList();


            $scope.saveEmployee = function () {
            if ($scope.firstname == ''||$scope.firstname==null||angular.isUndefined($scope.firstname)) {
                Notification.error({message: 'Please Enter First Name ', positionX: 'center', delay: 2000});
            }
            else if ($scope.username == ''||$scope.username==null||angular.isUndefined($scope.username)) {
                Notification.error({message: 'Please Enter Username ', positionX: 'center', delay: 2000});
            }
            else if ($scope.password == ''||$scope.password==null||angular.isUndefined($scope.password)) {
                Notification.error({message: 'Please Enter Password ', positionX: 'center', delay: 2000});
            }
            else if ($scope.passwordcnfm !== $scope.password) {
                Notification.error({message: 'Password should match', positionX: 'center', delay: 2000});
            }
            else if ($scope.phone == ''||$scope.phone==null||angular.isUndefined($scope.phone)) {
                Notification.error({message: 'Please Enter Phone Number ', positionX: 'center', delay: 2000});
            }
            else if ($scope.designation == ''||$scope.designation==null||angular.isUndefined($scope.designation)) {
                Notification.error({message: 'Please Select Designation ', positionX: 'center', delay: 2000});
            }
            else if ($scope.idno == ''||$scope.idno==null||angular.isUndefined($scope.idno)) {
                Notification.error({message: 'Please Enter Idno', positionX: 'center', delay: 2000});
            }
            else if ($scope.salary == ''||$scope.salary==null||angular.isUndefined($scope.salary)) {
                Notification.error({message: 'Please Enter Salary ', positionX: 'center', delay: 2000});
            }
            else if ($scope.salary<=0) {
                Notification.error({message: 'Salary should not be zero', positionX: 'center', delay: 2000});
            }
            else {
                var saveEmployeeDetails;
                saveEmployeeDetails = {
                    id: $scope.id,
                    title: $scope.title,
                    gender: $scope.gender,
                    firstname: $scope.firstname,
                    lastname: $scope.lastname,
                    username: $scope.username,
                    email: $scope.email,
                    password: $scope.password,
                    password: $scope.passwordcnfm,
                    dob: $scope.dob,
                    phone: $scope.phone,
                    department: $scope.department,
                    designation: $scope.designation,
                    country: $scope.country,
                    state: $scope.state,
                    city: $scope.city,
                    address: $scope.address,
                    id_type: $scope.idtype,
                    id_no: $scope.idno,
                    id_upload: $scope.idupld,
                    remarks: $scope.remark,
                    join_date: $scope.doj,
                    salary: $scope.salary
                };
                $http.post($scope.bshimServerURL + "/saveEmployee", angular.toJson(saveEmployeeDetails)).then(function (response) {
                    var data = response.data;
                    console.log(data);
                    if (data == "" || data == 'undefined') {
                        Notification.error({message: ' Already exists', positionX: 'center', delay: 2000});
                    } else {
                        $("#add_new_employee").modal('hide');
                        $scope.getEmployeesList();
                        Notification.success({message: 'Employee Created  successfully', positionX: 'center', delay: 2000});
                        $scope.removeuserDetails();

                        $scope.getUserList();
                    }
                }, function (error) {
                    Notification.error({
                        message: 'Something went wrong, please try again',
                        positionX: 'center',
                        delay: 2000
                    });
                });
            }

        }

        $scope.getEmployeesList = function (searchText) {
            if(angular.isUndefined(searchText)){
                $scope.searchText="";
            }
            $(".loader").css("display", "block");
            $http.post($scope.bshimServerURL + '/getEmployeesList').then(function (response) {
                var data = response.data.object;
                console.log(data);
                $scope.employeesList = data;

            }, function (error) {
                Notification.error({
                    message: 'Something went wrong, please try again',
                    positionX: 'center',
                    delay: 2000
                });
            })

        };
        $scope.getEmployeesList();

        $scope.backconfiguration=function(){
            $window.location.href='/home#!/hrmanagement'
        };

        $scope.importPopup = function(){
            $("#import_Employees").modal('show');
        }

        $scope.saveEmployeesImport = function(){
            $scope.isDisabled= true;
            var formElement = document.getElementById("employeesDetails");
            var employeesDetails = new FormData(formElement);
            $http.post($scope.bshimServerURL + '/EmployeesImportSave',employeesDetails,
                { headers: {'Content-Type': undefined},
                    transformRequest: angular.identity,
                }).then(function (response) {
                    $("#import_Employees").modal('hide');
                $scope.getEmployeesList();
                $scope.getPaginatedEmployeesList();
                    $scope.isDisabled= false;
                }, function (error) {
                    Notification.error({
                        message: 'Something went wrong, please try again',
                        positionX: 'center',
                        delay: 2000
                    });
                    $scope.isDisabled= false;
                }
            )
        }


        $scope.EditEmployees = function (data) {
            $scope.id=data.id;
            $scope.title=data.title;
            $scope.gender=data.gender;
            $scope.firstname=data.firstname;
            $scope.lastname=data.lastname;
            $scope.username=data.username;
            $scope.email=data.email;
            $scope.password=data.password;
            $scope.passwordcnfm=data.password;
            $scope.dob=new Date(data.dob);
            $scope.phone=data.phone;
            $scope.department=data.department;
            $scope.designation=data.designation;
            $scope.country=data.country;
            $scope.state=data.state;
            $scope.city=data.city;
            $scope.idtype=data.id_type;
            $scope.address=data.address;
            $scope.idno=data.id_no;
            $scope.idupld=data.id_upload;
            $scope.remark=data.remarks;
            $scope.doj=new Date(data.join_date);
            $scope.salary=data.salary;
            $scope.getdepartmentsList();
            $scope.getCountryList();
            $scope.getEmployeesList();
            $scope.getStateListBasedonContry($scope.country);
            $scope.getCityListBasedonState($scope.state);
            $scope.getDesignationListBasedOnDepartment($scope.department);

            $scope.operation = 'Edit';
            $("#submit").text("Update");
            $('#employee-title').text("Edit employee");
            $("#add_new_employee").modal('show');

        }, function (error) {
            Notification.error({message: 'Something went wrong, please try again', positionX: 'center', delay: 2000});
        };


        $scope.DeleteEmployees=function(data) {
            bootbox.confirm({
                title: "Alert",
                message: "Do you want to Continue ?",
                buttons: {
                    confirm: {
                        label: 'OK'
                    },
                    cancel: {
                        label: 'Cancel'
                    }
                },
                callback: function (result) {
                    if (result == true) {
                        $http.post($scope.bshimServerURL + '/getDeleteEmployees?id=' + data.id).then(function (response, status, headers, config) {
                            var data = response.data;
                            Notification.success({
                                message: 'Employee deleted  successfully',
                                positionX: 'center',
                                delay: 2000
                            });
                            $scope.getEmployeesList();
                        }, function (error) {
                            Notification.error({
                                message: 'Something went wrong, please try again',
                                positionX: 'center',
                                delay: 2000
                            });
                            $scope.isDisabled = false;
                        });
                    }
                }
            });
        };

        $scope.addemployee = function () {
            $scope.department=null;
            $scope.designation=null;
            $scope.country=null;
            $scope.state=null;
            $scope.city=null;
            $scope.address="";
            $scope.idtype=null;
            $scope.idno="";
            $scope.idupld="";
            $scope.remark="";
            $scope.doj="";
            $scope.salary="";
            $scope.phone="";
            $scope.dob="";
            $scope.password="";
            $scope.passwordcnfm="";
            $scope.email="";
            $scope.username="";
            $scope.lastname="";
            $scope.firstname="";
            $scope.gender="";
            $scope.title="";

            $scope.getEmployeesList();
            $scope.getdepartmentsList();
            $scope.getCountryList();
            $("#submit").text("Save");
            $('#employee-title').text("Add employee");
            $("#add_new_employee").modal('show');
        };

        $scope.getdepartmentsList = function (searchText) {
            if(angular.isUndefined(searchText)){
                $scope.searchText="";
            }
            $http.post($scope.bshimServerURL + '/getdepartmentsList?searchText=').then(function (response) {
                var data = response.data.object;
                $scope.departmentsList = data;
            }, function (error) {
                Notification.error({
                    message: 'Something went wrong, please try again',
                    positionX: 'center',
                    delay: 2000
                });
            })
        };

        $scope.getCountryList = function (type) {
            if (angular.isUndefined(type)) {
                type = "";
            }
            $http.post($scope.bshimServerURL + '/getCountryList?type=' + type).then(function (response) {
                var data = response.data;
                var i = 0;
                $scope.countryList = data;
                $scope.listStatus = true;
                angular.forEach($scope.countryList, function (value, key) {
                    if (value.countryName.toUpperCase() == type.toUpperCase()) {
                        if (value.status == 'InActive') {
                            i++;
                        }
                    }
                })
                if (i > 0) {
                    Notification.warning({
                        message: 'country Became InActive',
                        positionX: 'center',
                        delay: 2000
                    });
                }

            }, function (error) {
                Notification.error({
                    message: 'Something went wrong, please try again',
                    positionX: 'center',
                    delay: 2000
                });
            })
        };
        $scope.getStateListBasedonContry=function (country) {
            $http.post($scope.bshimServerURL + '/getStateListBasedOnCountry?country=' + country).then(function (response) {
                var data = response.data;
                $scope.stateList = data;
            }, function (error) {
                Notification.error({
                    message: 'Something went wrong, please try again',
                    positionX: 'center',
                    delay: 2000
                });
            })
        }
        $scope.getCityListBasedonState=function (state) {
            $http.post($scope.bshimServerURL + '/getCityListBasedonState?state=' + state).then(function (response) {
                var data = response.data;
                $scope.cityList = data;
            }, function (error) {
                Notification.error({
                    message: 'Something went wrong, please try again',
                    positionX: 'center',
                    delay: 2000
                });
            })
        }
        $scope.getDesignationListBasedOnDepartment=function (department) {
            $http.post($scope.bshimServerURL + '/getDesignationListBasedOnDepartment?department=' + department).then(function (response) {
                var data = response.data;
                $scope.designationList = data;
            }, function (error) {
                Notification.error({
                    message: 'Something went wrong, please try again',
                    positionX: 'center',
                    delay: 2000
                });
            })
        }


              $scope.getCityList = function (type,searchText) {
            if (angular.isUndefined(type,searchText)) {
                type = "";
                $scope.searchText="";
            }
            $http.post($scope.bshimServerURL + '/getCityList?&type=' + type).then(function (response) {
                var data = response.data;
                console.log(data);
                var i = 0;
                $scope.cityList = data;
                $scope.listStatus = true;
                angular.forEach($scope.countryList, function (value, key) {
                    if (value.countryName.toUpperCase() == type.toUpperCase()) {
                        if (value.status == 'InActive') {
                            i++;
                        }
                    }
                })
                if (i > 0) {
                    Notification.warning({
                        message: 'country Became InActive',
                        positionX: 'center',
                        delay: 2000
                    });
                }

            }, function (error) {
                Notification.error({
                    message: 'Something went wrong, please try again',
                    positionX: 'center',
                    delay: 2000
                });
            })
        };



    });
